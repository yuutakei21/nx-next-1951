// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["native", "debian-openssl-1.1.x"]
}

generator nestjs_dto_generator {
  provider             = "prisma-nestjs-dto-generator"
  enableModel          = true // default: true
  modelFileNameSuffix  = ".model" // default: ".model"
  modelClassNameSuffix = "Model" // default: ""
  enableSwagger        = true // default: false
  dtoClassNameSuffix   = "Dto" // default: "Dto"
  dtoFileNameSuffix    = ".dto" // default: ".dto"
  toLowerCase          = true // field name to lower case, default: false
  output               = "../src/endpoints/@generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sample {
  id String @id @default(uuid())
}

model Tenant {
  id Int @id @default(autoincrement())

  name    String  @unique
  enabled Boolean @default(true)

  users       User[]
  departments Department[]

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map("tenants")
}

model Department {
  id   Int    @id @default(autoincrement())
  name String @unique

  users User[]

  tenant   Tenant @relation(fields: [tenantId], references: [id])
  tenantId Int    @map(name: "tenant_id")

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map("departments")
}

model User {
  id    Int    @id @default(autoincrement())
  role  String @default("USER")
  email String @unique

  firstName String? @map(name: "first_name")
  lastName  String? @map(name: "last_name")

  password String
  enabled  Boolean @default(true)

  tenant   Tenant? @relation(fields: [tenantId], references: [id])
  tenantId Int?    @map(name: "tenant_id")

  department   Department? @relation(fields: [departmentId], references: [id])
  departmentId Int?        @map(name: "department_id")

  timestamp DateTime @default(now())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map("users")
}
