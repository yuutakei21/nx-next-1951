datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
  output          = "../src/@generated/prisma-client"
}

model Tenant {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  enabled     Boolean      @default(true)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  departments Department[]
  users       User[]

  @@map("tenants")
}

model Department {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  tenant   Tenant @relation(fields: [tenantId], references: [id])
  tenantId Int    @map("tenant_id")

  users User[]

  @@map("departments")
}

model User {
  id Int @id @default(autoincrement())

  sub   String   @unique @default(uuid())
  email String   @unique
  role  UserRole @default(USER)

  firstName String @default("") @map("first_name")
  lastName  String @default("") @map("last_name")

  password String
  enabled  Boolean @default(true)

  tenantId     Int      @map("tenant_id")
  departmentId Int      @map("department_id")
  timestamp    DateTime @default(now())

  currentHashedRefreshToken String? @map("refresh_token")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  department Department @relation(fields: [departmentId], references: [id])
  tenant     Tenant     @relation(fields: [tenantId], references: [id])

  @@map("users")
}

enum UserRole {
  USER
  ADMIN
}
